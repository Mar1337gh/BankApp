{"ast":null,"code":"var _jsxFileName = \"D:\\\\\\u0423\\u0447\\u0435\\u0431\\u0430\\\\\\u043F\\u0440 2025\\\\\\u0443\\u0447 \\u043F\\u0440 2025\\\\\\u0443\\u0447\\u0435\\u0431 \\u043F\\u0440 2025\\\\BankApp\\\\frontend\\\\src\\\\components\\\\MortgageCalc.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './MortgageCalc.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MortgageCalc = () => {\n  _s();\n  // создание ф-ии калькулятор ипотеки \n  const interestRate = 9.6; // создание константы процентной ставки\n  const [amount, setAmount] = useState(''); // создание состояния суммы кредита с пустым полем\n  const [loanTerm, setLoanTerm] = useState(''); //создание состояния срока займа\n  const [downPayment, setDownPayment] = useState(''); //создание состояния первоначального взноса\n  const [monthlyPayment, setMonthlyPayment] = useState(null); //создание состояния ежемесячного платежа (данных еще нет)\n  const [totalPayable, setTotalPayable] = useState(null); // создание состояния общей суммы к оплате\n  const [totalInterest, setTotalInterest] = useState(null); // создание состояния общей суммы процентов\n  const [error, setError] = useState(''); // создание состояния ошибки\n\n  const calculateMonthlyPayment = () => {\n    // созд ф-ии рассчета ежемесячного платежа\n    if (!amount || !loanTerm) {\n      setError('Пожалуйста, заполните все поля.'); //вывод ошибок, если переменные не верны\n      alert('Пожалуйста, заполните все поля !!!');\n      setMonthlyPayment(null); // устав состояние ежемесячного платежа пустым\n      return;\n    }\n    const loanAmount = parseFloat(amount) - (downPayment ? parseFloat(downPayment) : 0); // результат суммы кредита, терн оператор\n    if (loanAmount <= 0) {\n      setError('Ошибка: Сумма кредита должна быть положительной.');\n      return;\n    }\n    const r = parseFloat(interestRate) / 100 / 12; // месячная процентная ставка (годовая ставка делится на 12 и переводится в десятичную дробь)\n    const n = parseFloat(loanTerm) * 12; // срок займа в месяцах\n\n    if (r === 0)\n      // проверка, для предотвращения деления на 0\n      {\n        setMonthlyPayment((loanAmount / n).toFixed(2)); //устанав новое состояние ежемесячного платежа \n      } else {\n      const numerator = loanAmount * r * Math.pow(1 + r, n); // числитель в формуле расчета\n      const denominator = Math.pow(1 + r, n) - 1; //знаменатель. pow - степень числа\n      const monthlyPayment = (numerator / denominator).toFixed(2); //ежемесячный платеж. toFixed - преобразует число в строку, округляя его при необходимости\n\n      setMonthlyPayment(monthlyPayment); //устанав новое состояние ежемесячного платежа \n      const totalPayable = (monthlyPayment * n).toFixed(2);\n      setTotalPayable(totalPayable); //устанав новое состояние общей суммы к оплате\n      const totalInterest = (totalPayable - loanAmount).toFixed(2);\n      setTotalInterest(totalInterest); //устанав новое состояние общей суммы процентов\n      setError('');\n      const data = {\n        // создание перем data\n        amount: amount,\n        downPayment: downPayment,\n        loanTerm: loanTerm,\n        monthlyPayment: monthlyPayment,\n        totalPayable: totalPayable,\n        totalInterest: totalInterest\n      };\n      const api = 'http://localhost:9001/MortgageCalc';\n      fetch(api, {\n        // ввод данных, fetch - запрос на получ данных от пользователя\n        method: 'POST',\n        //метод\n        headers: {\n          // заголовки. тип контента - жсон\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(data) // тело запроса. stringify - парсинг строки в текст формат жсон\n      }).then(result => result.json()).then(result => {\n        console.log(result); //получ результата\n        //localStorage.setItem('token', result.token) // setItem - сохранение токена (ключ, result.token-значение)\n      });\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"\\u041A\\u0430\\u043B\\u044C\\u043A\\u0443\\u043B\\u044F\\u0442\\u043E\\u0440 \\u0438\\u043F\\u043E\\u0442\\u0435\\u043A\\u0438\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"main-cont\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"interestRate\",\n        children: /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"\\u041F\\u0440\\u043E\\u0446\\u0435\\u043D\\u0442\\u043D\\u0430\\u044F \\u0441\\u0442\\u0430\\u0432\\u043A\\u0430: 9.6 %\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"label\",\n        children: /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"\\u0421\\u0443\\u043C\\u043C\\u0430 \\u043A\\u0440\\u0438\\u0435\\u0434\\u0438\\u0442\\u0430 (\\u0440\\u0443\\u0431.):\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            value: amount // внесение суммы\n            ,\n            onChange: e => setAmount(e.target.value) // onChange - изменение состояния после внесения значения\n            ,\n            placeholder: \"Amount\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"label\",\n        children: /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"\\u041F\\u0435\\u0440\\u0432\\u043E\\u043D\\u0430\\u0447\\u0430\\u043B\\u044C\\u043D\\u044B\\u0439 \\u0432\\u0437\\u043D\\u043E\\u0441 (\\u0440\\u0443\\u0431.):\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            value: downPayment,\n            onChange: e => setDownPayment(e.target.value),\n            placeholder: \"Down Payment\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"label\",\n        children: /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"\\u0421\\u0440\\u043E\\u043A \\u0437\\u0430\\u0439\\u043C\\u0430 (\\u043B\\u0435\\u0442):\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            value: loanTerm,\n            onChange: e => setLoanTerm(e.target.value),\n            placeholder: \"Loan Term\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"label\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          onClick: calculateMonthlyPayment,\n          children: \"\\u0420\\u0430\\u0441\\u0441\\u0447\\u0438\\u0442\\u0430\\u0442\\u044C\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 9\n      }, this), error && /*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"res\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 19\n      }, this) /* вывод ошибки */, monthlyPayment && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"res\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: [\"\\u0415\\u0436\\u0435\\u043C\\u0435\\u0441\\u044F\\u0447\\u043D\\u044B\\u0439 \\u043F\\u043B\\u0430\\u0442\\u0435\\u0436: \", monthlyPayment]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: [\"\\u041E\\u0431\\u0449\\u0430\\u044F \\u0441\\u0443\\u043C\\u043C\\u0430: \", totalPayable]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: [\"\\u0421\\u0443\\u043C\\u043C\\u0430 \\u043F\\u0440\\u043E\\u0446\\u0435\\u043D\\u0442\\u043E\\u0432: \", totalInterest]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 5\n  }, this);\n};\n_s(MortgageCalc, \"k8FdHNvnjvVJoEYMnu4dmk6bvVk=\");\n_c = MortgageCalc;\nexport default MortgageCalc;\nvar _c;\n$RefreshReg$(_c, \"MortgageCalc\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","MortgageCalc","_s","interestRate","amount","setAmount","loanTerm","setLoanTerm","downPayment","setDownPayment","monthlyPayment","setMonthlyPayment","totalPayable","setTotalPayable","totalInterest","setTotalInterest","error","setError","calculateMonthlyPayment","alert","loanAmount","parseFloat","r","n","toFixed","numerator","Math","pow","denominator","data","api","fetch","method","headers","body","JSON","stringify","then","result","json","console","log","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","e","target","placeholder","onClick","_c","$RefreshReg$"],"sources":["D:/Учеба/пр 2025/уч пр 2025/учеб пр 2025/BankApp/frontend/src/components/MortgageCalc.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport './MortgageCalc.css';\r\n\r\nconst MortgageCalc = () => { // создание ф-ии калькулятор ипотеки \r\n  const interestRate = 9.6 // создание константы процентной ставки\r\n  const [amount, setAmount] = useState(''); // создание состояния суммы кредита с пустым полем\r\n  const [loanTerm, setLoanTerm] = useState(''); //создание состояния срока займа\r\n  const [downPayment, setDownPayment] = useState(''); //создание состояния первоначального взноса\r\n  const [monthlyPayment, setMonthlyPayment] = useState(null); //создание состояния ежемесячного платежа (данных еще нет)\r\n  const [totalPayable, setTotalPayable] = useState(null); // создание состояния общей суммы к оплате\r\n  const [totalInterest, setTotalInterest] = useState(null); // создание состояния общей суммы процентов\r\n  const [error, setError] = useState(''); // создание состояния ошибки\r\n\r\n  const calculateMonthlyPayment = () => { // созд ф-ии рассчета ежемесячного платежа\r\n    if (!amount || !loanTerm) {\r\n      setError('Пожалуйста, заполните все поля.'); //вывод ошибок, если переменные не верны\r\n      alert('Пожалуйста, заполните все поля !!!');\r\n      setMonthlyPayment(null); // устав состояние ежемесячного платежа пустым\r\n      return;  \r\n    }\r\n    const loanAmount = parseFloat(amount) - (downPayment ? parseFloat(downPayment) : 0);// результат суммы кредита, терн оператор\r\n    if (loanAmount <= 0) {\r\n      setError('Ошибка: Сумма кредита должна быть положительной.');\r\n      return;\r\n    } \r\n    const r = parseFloat(interestRate) / 100 / 12; // месячная процентная ставка (годовая ставка делится на 12 и переводится в десятичную дробь)\r\n    const n = parseFloat(loanTerm) * 12; // срок займа в месяцах\r\n\r\n    if (r === 0) // проверка, для предотвращения деления на 0\r\n    {\r\n      setMonthlyPayment((loanAmount / n).toFixed(2));//устанав новое состояние ежемесячного платежа \r\n    } \r\n    else {\r\n    const numerator = loanAmount * r * Math.pow(1 + r, n); // числитель в формуле расчета\r\n    const denominator = Math.pow(1 + r, n) - 1; //знаменатель. pow - степень числа\r\n    const monthlyPayment = (numerator / denominator).toFixed(2); //ежемесячный платеж. toFixed - преобразует число в строку, округляя его при необходимости\r\n\r\n    setMonthlyPayment(monthlyPayment); //устанав новое состояние ежемесячного платежа \r\n    const totalPayable = (monthlyPayment * n).toFixed(2);\r\n    setTotalPayable(totalPayable); //устанав новое состояние общей суммы к оплате\r\n    const totalInterest = (totalPayable - loanAmount).toFixed(2);\r\n    setTotalInterest(totalInterest); //устанав новое состояние общей суммы процентов\r\n    setError('');\r\n\r\n    const data = { // создание перем data\r\n      amount: amount,\r\n      downPayment: downPayment,\r\n      loanTerm: loanTerm,\r\n      monthlyPayment: monthlyPayment,\r\n      totalPayable: totalPayable,\r\n      totalInterest: totalInterest\r\n    }\r\n    \r\n    const api = 'http://localhost:9001/MortgageCalc'\r\n    \r\n    fetch (api, { // ввод данных, fetch - запрос на получ данных от пользователя\r\n      method: 'POST', //метод\r\n      headers: { // заголовки. тип контента - жсон\r\n        'Content-Type': 'application/json'\r\n      },\r\n      body: JSON.stringify(data) // тело запроса. stringify - парсинг строки в текст формат жсон\r\n    })\r\n    .then (result => result.json())\r\n    .then ((result) => {\r\n      console.log(result) //получ результата\r\n      //localStorage.setItem('token', result.token) // setItem - сохранение токена (ключ, result.token-значение)\r\n    })\r\n  }\r\n  };\r\n\r\n  return (\r\n    <div className='container'>\r\n      <h1>Калькулятор ипотеки</h1>\r\n      <div className='main-cont'>\r\n      <div className='interestRate'>\r\n          <h3>Процентная ставка: 9.6 %</h3>\r\n        </div>\r\n        <div className='label'>\r\n          <label>\r\n          Сумма криедита (руб.):\r\n            <input \r\n              type=\"number\"\r\n              value={amount} // внесение суммы\r\n              onChange={(e) => setAmount(e.target.value)} // onChange - изменение состояния после внесения значения\r\n              placeholder='Amount'\r\n            />\r\n          </label>\r\n        </div>\r\n        <div className='label'>\r\n          <label>\r\n          Первоначальный взнос (руб.):\r\n            <input\r\n              type=\"number\"\r\n              value={downPayment}\r\n              onChange={(e) => setDownPayment(e.target.value)}\r\n              placeholder='Down Payment'\r\n            />\r\n          </label>\r\n        </div>\r\n          <div className='label'>\r\n          <label>\r\n          Срок займа (лет):\r\n            <input\r\n              type=\"number\"\r\n              value={loanTerm}\r\n              onChange={(e) => setLoanTerm(e.target.value)}\r\n              placeholder='Loan Term'\r\n            />\r\n          </label>\r\n        </div>\r\n        <div className='label'>\r\n          <button type=\"submit\" onClick={calculateMonthlyPayment}>Рассчитать</button>\r\n        </div> \r\n        {error && <h3 className='res'>{error}</h3> /* вывод ошибки */} \r\n        {monthlyPayment && (\r\n          <div className='res'>\r\n            <h3>Ежемесячный платеж: {monthlyPayment}</h3>\r\n            <h3>Общая сумма: {totalPayable}</h3>\r\n            <h3>Сумма процентов: {totalInterest}</h3>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\nexport default MortgageCalc;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}